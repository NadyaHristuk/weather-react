{"ast":null,"code":"import _classCallCheck from \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nadin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Bootcamp10/react/weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport WeatherToday from \"./WeatherToday\";\nimport \"./App.css\";\nvar WEATHER_KEY = \"32097cc475f84a0dac883738192204\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      cityName: \"Kiev\",\n      numForecastDay: 5\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          cityName = _this$state.cityName,\n          numForecastDay = _this$state.numForecastDay;\n      var URL = \"http://api.apixu.com/v1/forecast.json?key=\".concat(WEATHER_KEY, \"&q=\").concat(cityName, \"&days=\").concat(numForecastDay);\n      axios.get(URL).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this2.setState({\n          isLoading: false,\n          temp_c: data.current.temp_c,\n          text: data.current.condition.text,\n          iconUrl: data.current.condition.icon,\n          forecastDays: data.forecast.forecastday\n        });\n      }).catch(function (err) {\n        if (err) console.error(\"Cannot fetch Weather Data from API\", err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          cityName = _this$state2.cityName,\n          isLoading = _this$state2.isLoading,\n          temp_c = _this$state2.temp_c,\n          text = _this$state2.text,\n          iconUrl = _this$state2.iconUrl,\n          forecastDays = _this$state2.forecastDays;\n      return React.createElement(React.Fragment, null, isLoading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#bbb\",\n        height: \"80\",\n        width: 80,\n        margin: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))) : React.createElement(WeatherToday, {\n        cityName: cityName,\n        temp_c: temp_c,\n        text: text,\n        iconUrl: iconUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nadin/Документы/Bootcamp10/react/weather/src/App.js"],"names":["React","Component","axios","Loader","WeatherToday","WEATHER_KEY","App","state","isLoading","cityName","numForecastDay","URL","get","then","res","data","setState","temp_c","current","text","condition","iconUrl","icon","forecastDays","forecast","forecastday","catch","err","console","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;AAEA,IAAMC,WAAW,GAAG,gCAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,QAAQ,EAAE,MAFJ;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;;;;;wCAMY;AAAA;;AAAA,wBACmB,KAAKH,KADxB;AAAA,UACVE,QADU,eACVA,QADU;AAAA,UACAC,cADA,eACAA,cADA;AAElB,UAAMC,GAAG,uDAAgDN,WAAhD,gBAAiEI,QAAjE,mBAAkFC,cAAlF,CAAT;AACAR,MAAAA,KAAK,CACFU,GADH,CACOD,GADP,EAEGE,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,eAAOA,GAAG,CAACC,IAAX;AACD,OAJH,EAKGF,IALH,CAKQ,UAAAE,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AACZR,UAAAA,SAAS,EAAE,KADC;AAEZS,UAAAA,MAAM,EAAEF,IAAI,CAACG,OAAL,CAAaD,MAFT;AAGZE,UAAAA,IAAI,EAAEJ,IAAI,CAACG,OAAL,CAAaE,SAAb,CAAuBD,IAHjB;AAIZE,UAAAA,OAAO,EAAEN,IAAI,CAACG,OAAL,CAAaE,SAAb,CAAuBE,IAJpB;AAKZC,UAAAA,YAAY,EAAER,IAAI,CAACS,QAAL,CAAcC;AALhB,SAAd;AAOD,OAbH,EAcGC,KAdH,CAcS,UAAAC,GAAG,EAAI;AACZ,YAAIA,GAAJ,EAASC,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,GAApD;AACV,OAhBH;AAiBD;;;6BAEQ;AAAA,yBAQH,KAAKpB,KARF;AAAA,UAELE,QAFK,gBAELA,QAFK;AAAA,UAGLD,SAHK,gBAGLA,SAHK;AAAA,UAILS,MAJK,gBAILA,MAJK;AAAA,UAKLE,IALK,gBAKLA,IALK;AAAA,UAMLE,OANK,gBAMLA,OANK;AAAA,UAOLE,YAPK,gBAOLA,YAPK;AAUP,aACE,0CACGf,SAAS,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,IAHT;AAIE,QAAA,KAAK,EAAE,EAJT;AAKE,QAAA,MAAM,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADQ,GAaR,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAEC,QADZ;AAEE,QAAA,MAAM,EAAEQ,MAFV;AAGE,QAAA,IAAI,EAAEE,IAHR;AAIE,QAAA,OAAO,EAAEE,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADF;AAwBD;;;;EA/DepB,S;;AAkElB,eAAeK,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport WeatherToday from \"./WeatherToday\";\nimport \"./App.css\";\n\nconst WEATHER_KEY = \"32097cc475f84a0dac883738192204\";\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    cityName: \"Kiev\",\n    numForecastDay: 5\n  };\n\n  componentDidMount() {\n    const { cityName, numForecastDay } = this.state;\n    const URL = `http://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}&q=${cityName}&days=${numForecastDay}`;\n    axios\n      .get(URL)\n      .then(res => {\n        return res.data;\n      })\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          temp_c: data.current.temp_c,\n          text: data.current.condition.text,\n          iconUrl: data.current.condition.icon,\n          forecastDays: data.forecast.forecastday\n        });\n      })\n      .catch(err => {\n        if (err) console.error(\"Cannot fetch Weather Data from API\", err);\n      });\n  }\n\n  render() {\n    const {\n      cityName,\n      isLoading,\n      temp_c,\n      text,\n      iconUrl,\n      forecastDays\n    } = this.state;\n\n    return (\n      <>\n        {isLoading ? (\n          <div>\n            <div>\n              <Loader\n                type=\"Circles\"\n                color=\"#bbb\"\n                height=\"80\"\n                width={80}\n                margin=\"100px\"\n              />\n            </div>\n          </div>\n        ) : (\n          <WeatherToday\n            cityName={cityName}\n            temp_c={temp_c}\n            text={text}\n            iconUrl={iconUrl}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}