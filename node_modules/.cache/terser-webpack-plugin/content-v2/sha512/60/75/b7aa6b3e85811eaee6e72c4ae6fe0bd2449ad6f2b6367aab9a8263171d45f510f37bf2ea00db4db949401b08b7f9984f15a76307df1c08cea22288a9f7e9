{"map":"{\"version\":3,\"sources\":[\"/home/nadin/Документы/weather-react/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/nadin/Документы/weather-react/src/DefaultCityBG.jpg\",\"/home/nadin/Документы/weather-react/src/Map.js\",\"/home/nadin/Документы/weather-react/src/WeatherToday.js\",\"/home/nadin/Документы/weather-react/src/Search.js\",\"/home/nadin/Документы/weather-react/src/App.js\",\"/home/nadin/Документы/weather-react/src/serviceWorker.js\",\"/home/nadin/Документы/weather-react/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"google\",\"window\",\"withScriptjs\",\"withGoogleMap\",\"_ref\",\"getInfo\",\"lat\",\"lng\",\"cityName\",\"country\",\"react_default\",\"a\",\"createElement\",\"lib\",\"onClick\",\"defaultZoom\",\"center\",\"MarkerWithLabel_default\",\"position\",\"labelAnchor\",\"maps\",\"Point\",\"labelStyle\",\"fontSize\",\"fontWeight\",\"backgroundColor\",\"color\",\"padding\",\"borderRadius\",\"WeatherToday\",\"temp_c\",\"text\",\"Fragment\",\"console\",\"log\",\"style\",\"height\",\"width\",\"src_Map\",\"googleMapURL\",\"loadingElement\",\"containerElement\",\"mapElement\",\"Search\",\"getInput\",\"onSubmit\",\"type\",\"name\",\"WEATHER_KEY\",\"IMAGE_KEY\",\"App\",\"state\",\"isLoading\",\"numForecastDay\",\"bgIMG\",\"getInfoMapClick\",\"e\",\"latLng\",\"_this\",\"URL\",\"concat\",\"axios\",\"get\",\"then\",\"res\",\"data\",\"setState\",\"location\",\"lon\",\"current\",\"condition\",\"iconUrl\",\"icon\",\"forecastDays\",\"forecast\",\"forecastday\",\"searchImages\",\"catch\",\"err\",\"error\",\"cityNameUpdate\",\"preventDefault\",\"target\",\"city\",\"value\",\"updateWeatherAndImage\",\"_this2\",\"this\",\"hits\",\"length\",\"DefaultCityImg\",\"Math\",\"floor\",\"random\",\"largeImageURL\",\"_this3\",\"_this$state\",\"updateWeather\",\"_this4\",\"_this$state2\",\"UpWeather\",\"UpImg\",\"Promise\",\"all\",\"_this$state3\",\"className\",\"react_loader_spinner_default\",\"margin\",\"backgroundImage\",\"src_Search\",\"map\",\"item\",\"date\",\"src_WeatherToday\",\"Component\",\"Boolean\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/DefaultCityBG.15adb96a.jpg\\\";\",\"import React from \\\"react\\\";\\nimport { withScriptjs, withGoogleMap, GoogleMap } from \\\"react-google-maps\\\";\\n\\nimport MarkerWithLabel from \\\"react-google-maps/lib/components/addons/MarkerWithLabel\\\";\\n\\nconst google = (window.google = window.google ? window.google : {});\\n\\nconst Map = ({ getInfo, lat, lng, cityName, country }) => (\\n  <GoogleMap onClick={getInfo} defaultZoom={12} center={{ lat: lat, lng: lng }}>\\n    <MarkerWithLabel\\n      position={{ lat: lat, lng: lng }}\\n      labelAnchor={new google.maps.Point(0, 0)}\\n      labelStyle={{\\n        fontSize: \\\"1.3rem\\\",\\n        fontWeight: \\\"700\\\",\\n        backgroundColor: \\\"white\\\",\\n        color: \\\"black\\\",\\n        padding: \\\"0.3rem 0.5rem 0.2rem\\\",\\n        borderRadius: \\\"30px\\\"\\n      }}\\n    >\\n      <div>\\n        {cityName ? cityName : \\\"Somewhere on\\\"},\\n        {country ? country : \\\"Planet Earth\\\"}\\n      </div>\\n    </MarkerWithLabel>\\n  </GoogleMap>\\n);\\n\\nexport default withScriptjs(withGoogleMap(Map));\\n\\n// AIzaSyAEV5hm-_7AqHTdPCrmjbFLY1bQkvEGpK0\\n\",\"import React from \\\"react\\\";\\nimport Map from \\\"./Map\\\";\\n\\nconst WeatherToday = ({\\n  cityName,\\n  temp_c,\\n  text,\\n  getInfo,\\n  lat,\\n  lng,\\n  country\\n}) => (\\n  <>\\n    {console.log({ lat }, { lng })}\\n    <h1>{cityName}</h1>\\n    <h1>{temp_c}</h1>\\n    <h1>{text}</h1>\\n    <div style={{ height: `450px`, width: \\\"50%\\\" }}>\\n      <Map\\n        getInfo={getInfo}\\n        lat={lat}\\n        lng={lng}\\n        cityName={cityName}\\n        country={country}\\n        googleMapURL=\\\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEV5hm-_7AqHTdPCrmjbFLY1bQkvEGpK0\\\"\\n        loadingElement={<div style={{ height: `100%` }} />}\\n        containerElement={<div style={{ height: `22.5rem` }} />}\\n        mapElement={<div style={{ height: `100%` }} />}\\n      />\\n    </div>\\n  </>\\n);\\n\\nexport default WeatherToday;\\n\",\"import React from \\\"react\\\";\\n\\nconst Search = ({ getInput }) => (\\n  <form onSubmit={getInput}>\\n    <input type=\\\"text\\\" name=\\\"city\\\" />\\n    <input type=\\\"submit\\\" />\\n  </form>\\n);\\n\\nexport default Search;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nimport Loader from \\\"react-loader-spinner\\\";\\nimport WeatherToday from \\\"./WeatherToday\\\";\\nimport \\\"./App.css\\\";\\nimport Search from \\\"./Search\\\";\\nimport { Promise } from \\\"rsvp\\\";\\nimport DefaultCityImg from \\\"./DefaultCityBG.jpg\\\";\\n\\nconst WEATHER_KEY = \\\"32097cc475f84a0dac883738192204\\\";\\nconst IMAGE_KEY = \\\"7986301-c14a62fbcda5a08a22ab81f9a\\\";\\n\\nclass App extends Component {\\n  state = {\\n    isLoading: true,\\n    cityName: \\\"Kiev\\\",\\n    numForecastDay: 5,\\n    bgIMG: \\\"\\\",\\n    lat: 50.25,\\n    lng: 30.3,\\n    country: \\\"Ukraine\\\"\\n  };\\n\\n  getInfoMapClick = e => {\\n    let lat = e.latLng.lat();\\n    let lng = e.latLng.lng();\\n    console.log(lat, lng);\\n    const { numForecastDay } = this.state;\\n    const URL = `https://cors.io/?http://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}&q=${lat},\\n    ${lng}&days=${numForecastDay}`;\\n    console.log(URL);\\n    axios\\n      .get(URL)\\n      .then(res => {\\n        return res.data;\\n      })\\n      .then(data => {\\n        this.setState(\\n          {\\n            isLoading: false,\\n            cityName: data.location.name,\\n            lat: data.location.lat,\\n            lng: data.location.lon,\\n            country: data.location.country,\\n            temp_c: data.current.temp_c,\\n            text: data.current.condition.text,\\n            iconUrl: data.current.condition.icon,\\n            forecastDays: data.forecast.forecastday\\n          },\\n          () => this.searchImages()\\n        );\\n      })\\n      .catch(err => {\\n        if (err) console.error(\\\"Cannot fetch Weather Data from API\\\", err);\\n      });\\n  };\\n\\n  searchImages() {\\n    const { cityName } = this.state;\\n\\n    const URL = `https://cors.io/?https://pixabay.com/api/?key=${IMAGE_KEY}&q=${cityName}`;\\n    console.log(URL);\\n    axios\\n      .get(URL)\\n      .then(res => {\\n        return res.data;\\n      })\\n      .then(data => {\\n        // console.log(Math.floor(Math.random() * data.hits.length));\\n        if (data.hits.length === 0) {\\n          this.setState({\\n            bgIMG: DefaultCityImg\\n          });\\n        } else {\\n          this.setState({\\n            bgIMG:\\n              data.hits[Math.floor(Math.random() * data.hits.length)]\\n                .largeImageURL\\n          });\\n        }\\n      });\\n  }\\n\\n  updateWeather() {\\n    const { cityName, numForecastDay } = this.state;\\n    const URL = `https://cors.io/?http://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}&q=${cityName}&days=${numForecastDay}`;\\n\\n    axios\\n      .get(URL)\\n      .then(res => {\\n        return res.data;\\n      })\\n      .then(data => {\\n        this.setState({\\n          isLoading: false,\\n          lat: data.location.lat,\\n          lng: data.location.lon,\\n          country: data.location.country,\\n          temp_c: data.current.temp_c,\\n          text: data.current.condition.text,\\n          iconUrl: data.current.condition.icon,\\n          forecastDays: data.forecast.forecastday\\n        });\\n      })\\n      .catch(err => {\\n        if (err) console.error(\\\"Cannot fetch Weather Data from API\\\", err);\\n      });\\n  }\\n\\n  componentDidMount() {\\n    this.updateWeather();\\n    this.searchImages();\\n  }\\n\\n  updateWeatherAndImage(value) {\\n    const { cityName, numForecastDay } = this.state;\\n    let UpWeather = axios.get(\\n      `https://cors.io/?http://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}&q=${cityName}&days=${numForecastDay}`\\n    );\\n    let UpImg = axios.get(\\n      `https://cors.io/?https://pixabay.com/api/?key=${IMAGE_KEY}&q=${cityName}`\\n    );\\n    Promise.all([UpWeather, UpImg]).then(res => {\\n      console.log(res);\\n      this.setState({\\n        isLoading: false,\\n        bgIMG:\\n          res[1].data.hits[Math.floor(Math.random() * res[1].data.hits.length)]\\n            .largeImageURL,\\n        cityName: res[0].data.location.name,\\n        lat: res[0].data.location.lat,\\n        lng: res[0].data.location.lon,\\n        country: res[0].data.location.country,\\n        temp_c: res[0].data.current.temp_c,\\n        text: res[0].data.current.condition.text,\\n        iconUrl: res[0].data.current.condition.icon,\\n        forecastDays: res[0].data.forecast.forecastday\\n      });\\n    });\\n  }\\n  cityNameUpdate = e => {\\n    e.preventDefault();\\n    // console.log(e.target.city.value);\\n    this.setState(\\n      {\\n        cityName: e.target.city.value\\n      },\\n      () => this.updateWeatherAndImage(this.state.cityName)\\n    );\\n    e.target.city.value = \\\"\\\";\\n    // console.log(this.state.cityName);\\n  };\\n\\n  render() {\\n    const {\\n      cityName,\\n      isLoading,\\n      temp_c,\\n      text,\\n      iconUrl,\\n      forecastDays,\\n      lng,\\n      lat,\\n      country,\\n      bgIMG\\n    } = this.state;\\n\\n    return (\\n      <>\\n        {isLoading ? (\\n          <div className=\\\"wrap\\\">\\n            <div className=\\\"wrapLoader\\\">\\n              <Loader\\n                type=\\\"Circles\\\"\\n                color=\\\"#bbb\\\"\\n                height=\\\"80\\\"\\n                width=\\\"80\\\"\\n                margin=\\\"100px\\\"\\n              />\\n            </div>\\n          </div>\\n        ) : (\\n          <div\\n            className=\\\"bgImage\\\"\\n            style={{\\n              backgroundImage: `linear-gradient(\\n      rgba(255, 255, 255, 0.8),\\n      rgba(255, 255, 255, 0.1)\\n    ),url(${bgIMG})`\\n            }}\\n          >\\n            <Search getInput={this.cityNameUpdate} />\\n            <ul>\\n              {forecastDays.map(item => (\\n                <li>{item.date}</li>\\n              ))}\\n            </ul>\\n            <WeatherToday\\n              cityName={cityName}\\n              temp_c={temp_c}\\n              text={text}\\n              iconUrl={iconUrl}\\n              lat={lat}\\n              lng={lng}\\n              country={country}\\n              getInfo={this.getInfoMapClick}\\n            />\\n          </div>\\n        )}\\n      </>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{153:function(t,e,a){t.exports=a.p+\"static/media/DefaultCityBG.15adb96a.jpg\"},156:function(t,e,a){t.exports=a(403)},161:function(t,e,a){},399:function(t,e,a){},402:function(t,e){},403:function(t,e,a){\"use strict\";a.r(e);var n=a(0),o=a.n(n),c=a(36),r=a.n(c),i=(a(161),a(145)),l=a(146),s=a(154),m=a(147),u=a(155),g=a(31),h=a.n(g),d=a(148),p=a.n(d),y=a(57),f=a(151),v=a.n(f),b=window.google=window.google?window.google:{},E=Object(y.withScriptjs)(Object(y.withGoogleMap)(function(t){var e=t.getInfo,a=t.lat,n=t.lng,c=t.cityName,r=t.country;return o.a.createElement(y.GoogleMap,{onClick:e,defaultZoom:12,center:{lat:a,lng:n}},o.a.createElement(v.a,{position:{lat:a,lng:n},labelAnchor:new b.maps.Point(0,0),labelStyle:{fontSize:\"1.3rem\",fontWeight:\"700\",backgroundColor:\"white\",color:\"black\",padding:\"0.3rem 0.5rem 0.2rem\",borderRadius:\"30px\"}},o.a.createElement(\"div\",null,c||\"Somewhere on\",\",\",r||\"Planet Earth\")))})),w=function(t){var e=t.cityName,a=t.temp_c,n=t.text,c=t.getInfo,r=t.lat,i=t.lng,l=t.country;return o.a.createElement(o.a.Fragment,null,console.log({lat:r},{lng:i}),o.a.createElement(\"h1\",null,e),o.a.createElement(\"h1\",null,a),o.a.createElement(\"h1\",null,n),o.a.createElement(\"div\",{style:{height:\"450px\",width:\"50%\"}},o.a.createElement(E,{getInfo:c,lat:r,lng:i,cityName:e,country:l,googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEV5hm-_7AqHTdPCrmjbFLY1bQkvEGpK0\",loadingElement:o.a.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:o.a.createElement(\"div\",{style:{height:\"22.5rem\"}}),mapElement:o.a.createElement(\"div\",{style:{height:\"100%\"}})})))},I=(a(399),function(t){var e=t.getInput;return o.a.createElement(\"form\",{onSubmit:e},o.a.createElement(\"input\",{type:\"text\",name:\"city\"}),o.a.createElement(\"input\",{type:\"submit\"}))}),k=a(152),x=a(153),N=a.n(x),M=\"32097cc475f84a0dac883738192204\",j=\"7986301-c14a62fbcda5a08a22ab81f9a\",D=function(t){function e(){var t,a;Object(i.a)(this,e);for(var n=arguments.length,o=new Array(n),c=0;c<n;c++)o[c]=arguments[c];return(a=Object(s.a)(this,(t=Object(m.a)(e)).call.apply(t,[this].concat(o)))).state={isLoading:!0,cityName:\"Kiev\",numForecastDay:5,bgIMG:\"\",lat:50.25,lng:30.3,country:\"Ukraine\"},a.getInfoMapClick=function(t){var e=t.latLng.lat(),n=t.latLng.lng();console.log(e,n);var o=a.state.numForecastDay,c=\"https://cors.io/?http://api.apixu.com/v1/forecast.json?key=\".concat(M,\"&q=\").concat(e,\",\\n    \").concat(n,\"&days=\").concat(o);console.log(c),h.a.get(c).then(function(t){return t.data}).then(function(t){a.setState({isLoading:!1,cityName:t.location.name,lat:t.location.lat,lng:t.location.lon,country:t.location.country,temp_c:t.current.temp_c,text:t.current.condition.text,iconUrl:t.current.condition.icon,forecastDays:t.forecast.forecastday},function(){return a.searchImages()})}).catch(function(t){t&&console.error(\"Cannot fetch Weather Data from API\",t)})},a.cityNameUpdate=function(t){t.preventDefault(),a.setState({cityName:t.target.city.value},function(){return a.updateWeatherAndImage(a.state.cityName)}),t.target.city.value=\"\"},a}return Object(u.a)(e,t),Object(l.a)(e,[{key:\"searchImages\",value:function(){var t=this,e=this.state.cityName,a=\"https://cors.io/?https://pixabay.com/api/?key=\".concat(j,\"&q=\").concat(e);console.log(a),h.a.get(a).then(function(t){return t.data}).then(function(e){0===e.hits.length?t.setState({bgIMG:N.a}):t.setState({bgIMG:e.hits[Math.floor(Math.random()*e.hits.length)].largeImageURL})})}},{key:\"updateWeather\",value:function(){var t=this,e=this.state,a=e.cityName,n=e.numForecastDay,o=\"https://cors.io/?http://api.apixu.com/v1/forecast.json?key=\".concat(M,\"&q=\").concat(a,\"&days=\").concat(n);h.a.get(o).then(function(t){return t.data}).then(function(e){t.setState({isLoading:!1,lat:e.location.lat,lng:e.location.lon,country:e.location.country,temp_c:e.current.temp_c,text:e.current.condition.text,iconUrl:e.current.condition.icon,forecastDays:e.forecast.forecastday})}).catch(function(t){t&&console.error(\"Cannot fetch Weather Data from API\",t)})}},{key:\"componentDidMount\",value:function(){this.updateWeather(),this.searchImages()}},{key:\"updateWeatherAndImage\",value:function(t){var e=this,a=this.state,n=a.cityName,o=a.numForecastDay,c=h.a.get(\"https://cors.io/?http://api.apixu.com/v1/forecast.json?key=\".concat(M,\"&q=\").concat(n,\"&days=\").concat(o)),r=h.a.get(\"https://cors.io/?https://pixabay.com/api/?key=\".concat(j,\"&q=\").concat(n));k.a.all([c,r]).then(function(t){console.log(t),e.setState({isLoading:!1,bgIMG:t[1].data.hits[Math.floor(Math.random()*t[1].data.hits.length)].largeImageURL,cityName:t[0].data.location.name,lat:t[0].data.location.lat,lng:t[0].data.location.lon,country:t[0].data.location.country,temp_c:t[0].data.current.temp_c,text:t[0].data.current.condition.text,iconUrl:t[0].data.current.condition.icon,forecastDays:t[0].data.forecast.forecastday})})}},{key:\"render\",value:function(){var t=this.state,e=t.cityName,a=t.isLoading,n=t.temp_c,c=t.text,r=t.iconUrl,i=t.forecastDays,l=t.lng,s=t.lat,m=t.country,u=t.bgIMG;return o.a.createElement(o.a.Fragment,null,a?o.a.createElement(\"div\",{className:\"wrap\"},o.a.createElement(\"div\",{className:\"wrapLoader\"},o.a.createElement(p.a,{type:\"Circles\",color:\"#bbb\",height:\"80\",width:\"80\",margin:\"100px\"}))):o.a.createElement(\"div\",{className:\"bgImage\",style:{backgroundImage:\"linear-gradient(\\n      rgba(255, 255, 255, 0.8),\\n      rgba(255, 255, 255, 0.1)\\n    ),url(\".concat(u,\")\")}},o.a.createElement(I,{getInput:this.cityNameUpdate}),o.a.createElement(\"ul\",null,i.map(function(t){return o.a.createElement(\"li\",null,t.date)})),o.a.createElement(w,{cityName:e,temp_c:n,text:c,iconUrl:r,lat:s,lng:l,country:m,getInfo:this.getInfoMapClick})))}}]),e}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(D,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[156,1,2]]]);","extractedComments":[]}